# Generated by Django 4.0.1 on 2022-04-03 19:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of artwork.', max_length=255, verbose_name='Title')),
                ('date', models.DateTimeField(help_text='Date of creation of artwork.', null=True, verbose_name='Date')),
                ('image', models.ImageField(help_text='High-res image of artwork.', upload_to=main.models.wrapper, verbose_name='Image')),
                ('description', models.TextField(help_text='Description of artwork.', verbose_name='Description')),
                ('width', models.PositiveIntegerField(help_text='Determines width of artwork.', null=True, verbose_name='Width')),
                ('height', models.PositiveIntegerField(help_text='Determines height of artwork.', null=True, verbose_name='Height')),
                ('measure', models.PositiveIntegerField(choices=[(1, 'Inch'), (2, 'Centimeter')], verbose_name='Measure unit')),
                ('materials', models.CharField(help_text='Materials of artwork.', max_length=255, null=True, verbose_name='Materials')),
                ('price', models.PositiveIntegerField(help_text='Price of artwork.', verbose_name='Price')),
                ('is_nft_linked', models.BooleanField(default=False, help_text='Determines if the token is linked to a physical object.', verbose_name='Is NFT token linked?')),
            ],
        ),
        migrations.CreateModel(
            name='Artwork_Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artwork_status_name', models.CharField(help_text="Status of artwork, e.g. 'Sold' or 'Reserved'", max_length=255, unique=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Artwork status',
                'verbose_name_plural': 'Artwork statuses',
            },
        ),
        migrations.CreateModel(
            name='Artwork_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artwork_type_name', models.CharField(help_text="Type of artwork, e.g. 'Bust'", max_length=255, unique=True, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Artwork type',
                'verbose_name_plural': 'Artwork types',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview_image', models.ImageField(help_text='This image will be shown at author preview page.', upload_to=main.models.wrapper, verbose_name='Author preview image')),
                ('image', models.ImageField(help_text='This image will be shown at author page.', upload_to=main.models.wrapper, verbose_name='Author image')),
                ('fname', models.CharField(max_length=255, verbose_name='First name')),
                ('lname', models.CharField(max_length=255, verbose_name='Last name')),
                ('qualification', models.CharField(help_text="Qualification of author, e.g. 'Surrealist master'", max_length=255, verbose_name='Qualification')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=255, verbose_name='City name')),
                ('postal_code', models.CharField(max_length=32, verbose_name='Postal code')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=255, verbose_name='Country')),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_name', models.CharField(max_length=255, verbose_name='Currency name')),
                ('currency_short', models.CharField(help_text="Currency short name, e.g. 'EUR'", max_length=10, verbose_name='Currency short name')),
                ('currency_symbol', models.CharField(help_text="Currency symbol, e.g. 'â‚¬'", max_length=3, verbose_name='Currency symbol')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.country', verbose_name='Country')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(help_text='Name of event.', max_length=255, verbose_name='Title')),
                ('event_description', models.TextField(help_text='Description', verbose_name='Content')),
                ('date', models.DateField(help_text='Date of event', verbose_name='Date')),
                ('image', models.ImageField(help_text='Preview image for event', upload_to=main.models.wrapper, verbose_name='Event preview')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author account')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_name', models.CharField(help_text='Name of physical gallery.', max_length=255, verbose_name='Gallery name')),
                ('gallery_address', models.CharField(max_length=512, verbose_name='Gallery address')),
                ('gallery_description', models.TextField(blank=True, max_length=512, verbose_name='Gallery description')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.city', verbose_name='City')),
            ],
            options={
                'verbose_name': 'Gallery',
                'verbose_name_plural': 'Galleries',
            },
        ),
        migrations.RemoveField(
            model_name='news',
            name='author',
        ),
        migrations.RemoveField(
            model_name='painting',
            name='author',
        ),
        migrations.DeleteModel(
            name='Artist',
        ),
        migrations.DeleteModel(
            name='News',
        ),
        migrations.DeleteModel(
            name='Painting',
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(help_text='Location of event.', on_delete=django.db.models.deletion.PROTECT, to='main.gallery', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.country', verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='author',
            field=models.ForeignKey(help_text='Author of artwork.', on_delete=django.db.models.deletion.PROTECT, to='main.author', verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='currency',
            field=models.ForeignKey(help_text='Payment currency.', on_delete=django.db.models.deletion.PROTECT, to='main.currency', verbose_name='Currency'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='location',
            field=models.ForeignKey(help_text='Physical location of artwork.', on_delete=django.db.models.deletion.PROTECT, to='main.gallery', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='status',
            field=models.ForeignKey(help_text='Status of artwork.', on_delete=django.db.models.deletion.PROTECT, to='main.artwork_status', verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='type',
            field=models.ForeignKey(help_text='Type of artwork.', on_delete=django.db.models.deletion.PROTECT, to='main.artwork_type', verbose_name='Type'),
        ),
    ]
